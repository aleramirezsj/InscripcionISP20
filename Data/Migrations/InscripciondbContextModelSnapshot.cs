// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(InscripciondbContext))]
    partial class InscripciondbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Data.Models.Alumno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("ApellidoNombre")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int>("Dni")
                        .HasColumnType("int(11)")
                        .HasColumnName("DNI");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id");

                    b.ToTable("alumno");
                });

            modelBuilder.Entity("Data.Models.Aniocarrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int>("CarreraId")
                        .HasColumnType("int(11)");

                    b.Property<int>("CarreraId1")
                        .HasColumnType("int(11)")
                        .HasColumnName("Carrera_Id");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CarreraId1" }, "fk_AnioCarrera_Carrera1_idx");

                    b.ToTable("aniocarrera");
                });

            modelBuilder.Entity("Data.Models.Carrera", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id");

                    b.ToTable("carrera");
                });

            modelBuilder.Entity("Data.Models.Ciclolectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id");

                    b.ToTable("ciclolectivo");
                });

            modelBuilder.Entity("Data.Models.Inscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("AlumnoId")
                        .HasColumnType("int(11)");

                    b.Property<int>("AlumnoId1")
                        .HasColumnType("int(11)")
                        .HasColumnName("Alumno_Id");

                    b.Property<int?>("MateriaCicloLectivoId")
                        .HasColumnType("int(11)");

                    b.Property<int>("MateriasCicloLectivoId")
                        .HasColumnType("int(11)")
                        .HasColumnName("MateriasCicloLectivo_Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AlumnoId1" }, "fk_Inscripcion_Alumno1_idx");

                    b.HasIndex(new[] { "MateriasCicloLectivoId" }, "fk_Inscripcion_MateriasCicloLectivo1_idx");

                    b.ToTable("inscripcion");
                });

            modelBuilder.Entity("Data.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("AnioCarreraId")
                        .HasColumnType("int(11)");

                    b.Property<int>("AnioCarreraId1")
                        .HasColumnType("int(11)")
                        .HasColumnName("AnioCarrera_Id");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AnioCarreraId1" }, "fk_Materia_AnioCarrera1_idx");

                    b.ToTable("materia");
                });

            modelBuilder.Entity("Data.Models.Materiaciclolectivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("CicloLectivoId")
                        .HasColumnType("int(11)");

                    b.Property<int>("CicloLectivoId1")
                        .HasColumnType("int(11)")
                        .HasColumnName("CicloLectivo_Id");

                    b.Property<int?>("MateriaId")
                        .HasColumnType("int(11)");

                    b.Property<int>("MateriaId1")
                        .HasColumnType("int(11)")
                        .HasColumnName("Materia_Id");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CicloLectivoId1" }, "fk_MateriasCicloLectivo_CicloLectivo1_idx");

                    b.HasIndex(new[] { "MateriaId1" }, "fk_MateriasCicloLectivo_Materia1_idx");

                    b.ToTable("materiasciclolectivo");
                });

            modelBuilder.Entity("Data.Models.Aniocarrera", b =>
                {
                    b.HasOne("Data.Models.Carrera", "CarreraId1Navigation")
                        .WithMany("Aniocarreras")
                        .HasForeignKey("CarreraId1")
                        .HasConstraintName("fk_AnioCarrera_Carrera1")
                        .IsRequired();

                    b.Navigation("CarreraId1Navigation");
                });

            modelBuilder.Entity("Data.Models.Inscripcion", b =>
                {
                    b.HasOne("Data.Models.Alumno", "AlumnoId1Navigation")
                        .WithMany("Inscripcions")
                        .HasForeignKey("AlumnoId1")
                        .HasConstraintName("fk_Inscripcion_Alumno1")
                        .IsRequired();

                    b.HasOne("Data.Models.Materiaciclolectivo", "MateriasCicloLectivo")
                        .WithMany("Inscripcions")
                        .HasForeignKey("MateriasCicloLectivoId")
                        .HasConstraintName("fk_Inscripcion_MateriasCicloLectivo1")
                        .IsRequired();

                    b.Navigation("AlumnoId1Navigation");

                    b.Navigation("MateriasCicloLectivo");
                });

            modelBuilder.Entity("Data.Models.Materia", b =>
                {
                    b.HasOne("Data.Models.Aniocarrera", "AnioCarreraId1Navigation")
                        .WithMany("Materias")
                        .HasForeignKey("AnioCarreraId1")
                        .HasConstraintName("fk_Materia_AnioCarrera1")
                        .IsRequired();

                    b.Navigation("AnioCarreraId1Navigation");
                });

            modelBuilder.Entity("Data.Models.Materiaciclolectivo", b =>
                {
                    b.HasOne("Data.Models.Ciclolectivo", "CicloLectivoId1Navigation")
                        .WithMany("Materiasciclolectivos")
                        .HasForeignKey("CicloLectivoId1")
                        .HasConstraintName("fk_MateriasCicloLectivo_CicloLectivo1")
                        .IsRequired();

                    b.HasOne("Data.Models.Materia", "MateriaId1Navigation")
                        .WithMany("Materiasciclolectivos")
                        .HasForeignKey("MateriaId1")
                        .HasConstraintName("fk_MateriasCicloLectivo_Materia1")
                        .IsRequired();

                    b.Navigation("CicloLectivoId1Navigation");

                    b.Navigation("MateriaId1Navigation");
                });

            modelBuilder.Entity("Data.Models.Alumno", b =>
                {
                    b.Navigation("Inscripcions");
                });

            modelBuilder.Entity("Data.Models.Aniocarrera", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("Data.Models.Carrera", b =>
                {
                    b.Navigation("Aniocarreras");
                });

            modelBuilder.Entity("Data.Models.Ciclolectivo", b =>
                {
                    b.Navigation("Materiasciclolectivos");
                });

            modelBuilder.Entity("Data.Models.Materia", b =>
                {
                    b.Navigation("Materiasciclolectivos");
                });

            modelBuilder.Entity("Data.Models.Materiaciclolectivo", b =>
                {
                    b.Navigation("Inscripcions");
                });
#pragma warning restore 612, 618
        }
    }
}
